openapi: 3.0.3
info:
  title: Recovery Kit
  description: |-
    The below describes the endpoints we will implement.
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
tags:
  - name: Derivation
    description: Everything about address derivation
    externalDocs:
      description: Find out more
      url: https://river.com/learn/terms/b/bip-44-derivation-paths-for-p2pkh/
  - name: Key Recovery
    description: Operations about key recovery
  - name: Transactions
    description: Creating transactions
paths:
  /create-tx:
    post:
      tags:
        - Transactions
      summary: Create a transaction
      description: Creates a transaction and returns information based on the request
      operationId: createTx
      parameters:
        - name: asset
          in: query
          required: true
          description: The asset to use for the signature
          schema:
            type: string
        - name: account
          in: query
          required: true
          description: The account to use to create the transaction
          schema:
            type: number
        - name: change
          in: query
          required: false
          description: The change to use for the derivation
          schema:
            type: number
            default: 0
        - name: index
          in: query
          required: false
          description: The index to use for the derivation
          schema:
            type: number
            default: 0
        - name: testnet
          in: query
          required: false
          description: Is this testnet or not
          schema:
            type: boolean
            default: false
        - name: qr
          in: query
          required: false
          description: Should the returned response be a QR image (base64 encoded)
          schema:
            type: boolean
            default: false
      requestBody:
        description: Transaction request JSON
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionRequest"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  oneOf:
                    - $ref: "#/components/schemas/QRResponse"
                    - $ref: "#/components/schemas/TransactionResponse"
        "500":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /recover-keys:
    post:
      tags:
        - Key Recovery
      summary: Recover Extended Keys
      description: Retrieves XPRV, FPRV, XPUB, FPUB. Zip & RSA key should be in base 64 format.
      operationId: recoverKeys
      parameters:
        - name: recover-prv
          in: query
          description: Whether to recover the XPRV and FPRV as well as the XPUB and FPUB. If returned, will return partial info only.
          schema:
            type: boolean
            default: False
      requestBody:
        description: Zip & RSA key should be in base 64 format.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecoverKeysRequest"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecoverKeysResponse"
        "500":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /show-extended-private-keys:
    get:
      tags:
        - Key Recovery
      summary: Retrieve full extended keys to show
      description: Retrieves full info of XPRV, FPRV
      operationId: showFullPrv

      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShowExtendedKeyResponse"
        "500":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /derive-addresses:
    get:
      tags:
        - Derivation
      summary: Derives a certain amount of addresses
      description: Given an asset, vault and index (if UTXO), returns the private key, public key, and list of addresses & paths (or single address & path).
      operationId: deriveAddress
      parameters:
        - name: asset
          in: query
          required: true
          description: The symbol of the asset (BTC, ETH, SOL and so on).
          schema:
            type: string
            default:
        - name: account
          in: query
          required: true
          description: The vault ID.
          schema:
            type: integer
        - name: index_start
          in: query
          required: false
          description: The starting index of derivation.
          schema:
            type: integer
            default: 0
        - name: index_end
          in: query
          required: false
          description: The ending index of derivation.
          schema:
            type: integer
            default: 0
        - name: change
          in: query
          required: false
          description: The change according to BIP-44.
          schema:
            type: integer
            default: 0
        - name: xpub
          in: query
          required: false
          description: Derive addresses only from the xpub
          schema:
            type: boolean
            default: false
        - name: legacy
          in: query
          description: Get the legacy format of this asset if applies.
          schema:
            type: boolean
            default: false
        - name: checksum
          in: query
          description: Get the checksumed format of this asset if applies.
          schema:
            type: boolean
            default: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeriveAddressesResponse"
        "500":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /show-private-key:
    get:
      tags:
        - Derivation
      summary: Retrieve private key to show
      description: Retrieves full info of PRV.
      operationId: showPrv
      parameters:
        - name: asset
          in: query
          required: true
          description: The symbol of the asset (BTC, ETH, SOL and so on).
          schema:
            type: string
        - name: account
          in: query
          required: true
          description: The vault ID.
          schema:
            type: integer
        - name: change
          in: query
          required: false
          description: The change to use for the derivation
          schema:
            type: integer
            default: 0
        - name: index
          in: query
          required: false
          description: The index to use for the derivation
          schema:
            type: integer
            default: 0
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShowKeyResponse"
        "500":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /get-wif:
    get:
      summary: Gets the WIF (Wallet import format) of an asset
      description: Gets a WIF in a form of a base64 encoded QR image
      operationId: getWIF
      tags:
        - Derivation
      parameters:
        - name: asset
          in: query
          required: true
          description: The asset to get the WIF for. Note only ECDSA supports this
          schema:
            type: string
        - name: account
          in: query
          required: true
          description: The account to get the WIF for
          schema:
            type: integer
        - name: change
          in: query
          required: false
          description: The change to use for the WIF
          schema:
            type: integer
            default: 0
        - name: index
          in: query
          required: false
          description: The index to use for the WIF
          schema:
            type: integer
            default: 0
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QRResponse"
        "500":
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    RecoverKeysRequest:
      properties:
        zip:
          description: The ZIP file base64 encoded
          type: string
        passphrase:
          description: The mobile share passphrase
          type: string
        rsa-key:
          description: The RSA key used to encrypt the cloud shares
          type: string
        rsa-key-passphrase:
          description: The RSA key passphrase
          type: string
    RecoverKeysResponse:
      properties:
        xpub:
          type: string
        fpub:
          type: string
        xprv:
          type: string
        fprv:
          type: string
    ShowExtendedKeyResponse:
      properties:
        xprv:
          type: string
        fprv:
          type: string
    DeriveAddressesResponse:
      type: array
      items:
        type: object
        properties:
          prv:
            type: string
            description: The private key (if requested)
            format: hex
          pub:
            type: string
            description: The public key
            format: hex
          address:
            type: string
            description: The address associated with this public key
          path:
            description: The derivation path used for this key pair
            type: string
    ShowKeyResponse:
      properties:
        prv:
          description: The Private key requested
          type: string
    TransactionRequest:
      properties:
        to:
          description: The address to which we are going to send the assets to.
          type: string
        amount:
          description: The amount to transfer in base asset (not the smallest unit, if transferring ETH, the amount in ETH, not wei)
          type: number
          format: float
        memo:
          description: Applicable for tag / memo based chains. The tag / memo to put in the message field
          type: string
        abi:
          description: Base64 encoded ABI to use for the contract call
          type: string
          format: base64
        contract_call_params:
          description: The parameters for the contract call
          type: array
          items:
            $ref: "#/components/schemas/ContractCallParameterPair"
        fee:
          oneOf:
            - $ref: "#/components/schemas/FeeRate"
            - $ref: "#/components/schemas/Gas"

    FeeRate:
      description: For UTXO, the fee rate that we want to use (for example, sat/vbyte)
      properties:
        rate:
          type: number
          format: float
    Gas:
      description: For EVM based, the gas parameters that will be used
      properties:
        gasPrice:
          description: The maximum allowed gas price
          type: integer
        gasLimit:
          description: The maximum allowed gas to spend on this tx
          type: integer
    ContractCallParameterPair:
      properties:
        key:
          description: The name of the contract call parameter
          type: string
        value:
          description: The value of the contract call parameter
          type: string
    QRResponse:
      properties:
        img:
          description: A QR Image, base64 encoded
          type: string
          format: base64
    TransactionResponse:
      properties:
        tx:
          description: The Transaction hex, including the signature
          type: string
          format: hex
    Error:
      properties:
        reason:
          type: string
          description: The cause of the error
